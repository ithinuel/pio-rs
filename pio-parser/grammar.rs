// auto-generated: "lalrpop 0.20.0"
// sha3: cdc9c009e5716caa68ac35e7c4e7c850568579625e1d95d9a307520392529696
use crate::{
  Line,
  MovOp,
  Value,
  InSource,
  Location,
  Directive,
  MovSource,
  MovTarget,
  OutTarget,
  SymbolDef,
  SetTarget,
  Expression,
  WaitSource,
  Instruction,
  IrqModifier,
  JmpCondition,
  InstructionOperands,
  lexer::{self, Token}
};
#[allow(unused_extern_crates)]
extern crate lalrpop_util as __lalrpop_util;
#[allow(unused_imports)]
use self::__lalrpop_util::state_machine as __state_machine;
extern crate core;
extern crate alloc;

#[rustfmt::skip]
#[allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports, unused_parens, clippy::all)]
mod __parse__File {

    use crate::{
  Line,
  MovOp,
  Value,
  InSource,
  Location,
  Directive,
  MovSource,
  MovTarget,
  OutTarget,
  SymbolDef,
  SetTarget,
  Expression,
  WaitSource,
  Instruction,
  IrqModifier,
  JmpCondition,
  InstructionOperands,
  lexer::{self, Token}
};
    #[allow(unused_extern_crates)]
    extern crate lalrpop_util as __lalrpop_util;
    #[allow(unused_imports)]
    use self::__lalrpop_util::state_machine as __state_machine;
    extern crate core;
    extern crate alloc;
    use super::__ToTriple;
    #[allow(dead_code)]
    pub(crate) enum __Symbol<'i>
     {
        Variant0(Token<'i>),
        Variant1(&'i str),
        Variant2(i32),
        Variant3(usize),
        Variant4((Location, InstructionOperands<'i>)),
        Variant5(bool),
        Variant6(core::option::Option<bool>),
        Variant7(Expression<'i>),
        Variant8(core::option::Option<Expression<'i>>),
        Variant9(Directive<'i>),
        Variant10(alloc::vec::Vec<Option<Line<'i>>>),
        Variant11(InSource),
        Variant12((Location, Instruction<'i>)),
        Variant13(IrqModifier),
        Variant14(core::option::Option<IrqModifier>),
        Variant15(JmpCondition),
        Variant16(core::option::Option<JmpCondition>),
        Variant17(SymbolDef<'i>),
        Variant18(Line<'i>),
        Variant19(Option<Line<'i>>),
        Variant20(MovOp),
        Variant21(core::option::Option<MovOp>),
        Variant22(MovSource),
        Variant23(MovTarget),
        Variant24(OutTarget),
        Variant25(SetTarget),
        Variant26(Value<'i>),
        Variant27(core::option::Option<Value<'i>>),
        Variant28(WaitSource<'i>),
        Variant29(core::option::Option<Token<'i>>),
    }
    const __ACTION: &[i16] = &[
        // State 0
        0, 0, 64, 65, 0, 0, 0, 0, 0, 66, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 6, 7, 0, 8, 67, 0, 0, 0, 9, 68, 0, 69, 0, 0, 70, 0, 0, 0, 0, 0, 10, 0, 0, 11, 0, 0, 0, 0, 0, 71, 72, 12, 13, 0, 0, 0, 14, 0, 15, 0, 0, 16, 17, 73, 74, 0, 0, 0,
        // State 1
        0, 0, -65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, -65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 2
        0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 0, 8, 0, 0, 0, 0, 9, 0, 0, -100, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 12, 13, 0, 0, 0, 14, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0,
        // State 3
        0, 0, 64, 65, 0, 0, 0, 0, 0, 66, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 6, 7, 0, 8, 67, 0, 0, 0, 9, 68, 0, 69, 0, 0, 70, 0, 0, 0, 0, 0, 10, 0, 0, 11, 0, 0, 0, 0, 0, 71, 72, 12, 13, 0, 0, 0, 14, 0, 15, 0, 0, 16, 17, 73, 74, 0, 0, 0,
        // State 4
        0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 5
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 86, 0, 87,
        // State 6
        25, 0, 0, 89, 90, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
        // State 7
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 105,
        // State 8
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 110, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 113,
        // State 9
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 10
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 119, 0, 120, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 123,
        // State 11
        0, 0, -23, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, -23, 0, 0, 0, 0, -23, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 12
        0, 0, -19, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, -19, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 13
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 133,
        // State 14
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 15
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 16
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 17
        0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 18
        0, 0, -64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, -64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 19
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 20
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 21
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 22
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 23
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 24
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 25
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 26
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 27
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 28
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0, 159, 0, 0, 0, 160, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 163, 0, 0, 0, 0, 0, 164, 0, 165,
        // State 29
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 30
        0, 0, -22, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -22, 0, 0, 0, 0, -22, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 31
        0, 0, -18, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 0, 0, -18, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 32
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 33
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 34
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 35
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 36
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 37
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 38
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 39
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 40
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 41
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 42
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 43
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 44
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 45
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 46
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 47
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 48
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 160, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 164, 0, 165,
        // State 49
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0, 159, 0, 0, 0, 160, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 163, 0, 0, 0, 0, 0, 164, 0, 165,
        // State 50
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 51
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 52
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 53
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 54
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 55
        25, 0, 0, 89, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 56
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 160, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 164, 0, 165,
        // State 57
        0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 58
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 59
        0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 60
        0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 61
        0, 0, -106, -106, 0, 0, 0, 0, 0, -106, 0, 0, 0, -106, 0, 0, 0, 0, 0, 0, -106, -106, 0, -106, -106, 0, 0, 0, -106, -106, 0, -106, 0, 0, -106, 0, 0, 0, 0, 0, -106, 0, 0, -106, 0, 0, 0, 0, 0, -106, -106, -106, -106, 0, 0, 0, -106, 0, -106, 0, 0, -106, -106, -106, -106, 0, 0, 0,
        // State 62
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 63
        0, 0, -105, -105, 0, 0, 0, 0, 0, -105, 0, 0, 0, -105, 0, 0, 0, 0, 0, 0, -105, -105, 0, -105, -105, 0, 0, 0, -105, -105, 0, -105, 0, 0, -105, 0, 0, 0, 0, 0, -105, 0, 0, -105, 0, 0, 0, 0, 0, -105, -105, -105, -105, 0, 0, 0, -105, 0, -105, 0, 0, -105, -105, -105, -105, 0, 0, 0,
        // State 64
        -141, 0, 0, -141, -141, 0, 0, 0, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 65
        0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 66
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 67
        0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 68
        0, 0, -104, -104, 0, 0, 0, 0, 0, -104, 0, 0, 0, -104, 0, 0, 0, 0, 0, 0, -104, -104, 0, -104, -104, 0, 0, 0, -104, -104, 0, -104, 0, 0, -104, 0, 0, 0, 0, 0, -104, 0, 0, -104, 0, 0, 0, 0, 0, -104, -104, -104, -104, 0, 0, 0, -104, 0, -104, 0, 0, -104, -104, -104, -104, 0, 0, 0,
        // State 69
        0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 70
        0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 71
        0, 0, 0, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 72
        0, 0, -41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 73
        0, 0, -42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 74
        0, 0, -99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 75
        0, 0, -103, -103, 0, 0, 0, 0, 0, -103, 0, 0, 0, -103, 0, 0, 0, 0, 0, 0, -103, -103, 0, -103, -103, 0, 0, 0, -103, -103, 0, -103, 0, 0, -103, 0, 0, 0, 0, 0, -103, 0, 0, -103, 0, 0, 0, 0, 0, -103, -103, -103, -103, 0, 0, 0, -103, 0, -103, 0, 0, -103, -103, -103, -103, 0, 0, 0,
        // State 76
        0, 0, -102, -102, 0, 0, 0, 0, 0, -102, 0, 0, 0, -102, 0, 0, 0, 0, 0, 0, -102, -102, 0, -102, -102, 0, 0, 0, -102, -102, 0, -102, 0, 0, -102, 0, 0, 0, 0, 0, -102, 0, 0, -102, 0, 0, 0, 0, 0, -102, -102, -102, -102, 0, 0, 0, -102, 0, -102, 0, 0, -102, -102, -102, -102, 0, 0, 0,
        // State 77
        0, 0, -107, -107, 0, 0, 0, 0, 0, -107, 0, 0, 0, -107, 0, 0, 0, 0, 0, 0, -107, -107, 0, -107, -107, 0, 0, 0, -107, -107, 0, -107, 0, 0, -107, 0, 0, 0, 0, 0, -107, 0, 0, -107, 0, 0, 0, 0, 0, -107, -107, -107, -107, 0, 0, 0, -107, 0, -107, 0, 0, -107, -107, -107, -107, 0, 0, 0,
        // State 78
        0, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -95, -95, 0, -95, 0, 0, 0, 0, -95, 0, 0, -95, 0, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, 0, 0, 0, 0, 0, -95, -95, 0, 0, 0, -95, 0, 0, 0, 0, -95, 0, 0, 0, 0, 0, 0,
        // State 79
        0, 0, -101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 80
        -59, 0, 0, -59, -59, 0, 0, 0, 0, 0, 0, -59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 81
        -58, 0, 0, -58, -58, 0, 0, 0, 0, 0, 0, -58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 82
        -60, 0, 0, -60, -60, 0, 0, 0, 0, 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 83
        -55, 0, 0, -55, -55, 0, 0, 0, 0, 0, 0, -55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 84
        -61, 0, 0, -61, -61, 0, 0, 0, 0, 0, 0, -61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 85
        -56, 0, 0, -56, -56, 0, 0, 0, 0, 0, 0, -56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 86
        -57, 0, 0, -57, -57, 0, 0, 0, 0, 0, 0, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 87
        0, 0, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -31, 0, 0, 0, 0, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 0, 0, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 88
        0, -145, -145, 0, 0, -145, 0, 0, 0, 0, 0, -145, 0, 0, -145, 0, 0, -145, 0, 0, 0, -145, 0, 0, 0, 0, -145, -145, 0, -145, 0, -145, 0, 0, 0, 0, 0, 0, -145, -145, 0, 0, 0, 0, 0, -145, -145, 0, -145, 0, 0, 0, 0, -145, -145, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0,
        // State 89
        0, -144, -144, 0, 0, -144, 0, 0, 0, 0, 0, -144, 0, 0, -144, 0, 0, -144, 0, 0, 0, -144, 0, 0, 0, 0, -144, -144, 0, -144, 0, -144, 0, 0, 0, 0, 0, 0, -144, -144, 0, 0, 0, 0, 0, -144, -144, 0, -144, 0, 0, 0, 0, -144, -144, 0, 0, -144, 0, 0, 0, 0, 0, 0, 0, 0, -144, 0,
        // State 90
        -67, 0, 0, -67, -67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 91
        -69, 0, 0, -69, -69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 92
        -70, 0, 0, -70, -70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 93
        -68, 0, 0, -68, -68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 94
        0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 95
        0, -53, -53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -53, 41, 0, 0, 0, -53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, -53, 0, 0, 0, -53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 96
        0, -82, -82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -82, -82, 0, 44, 0, -82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -82, 0, 0, 0, 0, -82, 0, 0, 0, -82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 97
        0, -85, -85, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, -85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, -85, 0, -85, 0, -85, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, -85, 0, 0, 0, 0, -85, 0, 0, 0, -85, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
        // State 98
        0, -88, -88, 0, 0, -88, 0, 0, 0, 0, 0, 0, 0, 0, -88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -88, -88, 0, -88, 0, -88, 0, 0, 0, 0, 0, 0, 0, -88, 0, 0, 0, 0, 0, 0, 0, 0, -88, 0, 0, 0, 0, -88, 0, 0, 0, -88, 0, 0, 0, 0, 0, 0, 0, 0, -88, 0,
        // State 99
        0, -94, -94, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -94, -94, 0, -94, 0, -94, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, -94, 0, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0,
        // State 100
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 151,
        // State 101
        -78, 0, 0, -78, -78, 0, 0, 0, 0, 0, 0, -78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 102
        48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 103
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 104
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 105
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 106
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, -122, 0, 0, 0, -122, 0, 0, 0, 0, 0, -122, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0, 0, -122, 0, 0, 0, 0, 0, -122, 0, -122,
        // State 107
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, -124, 0, 0, 0, -124, 0, 0, 0, 0, 0, -124, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0, 0, -124, 0, 0, 0, 0, 0, -124, 0, -124,
        // State 108
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, -125, 0, 0, 0, -125, 0, 0, 0, 0, 0, -125, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0, 0, -125, 0, 0, 0, 0, 0, -125, 0, -125,
        // State 109
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, -123, 0, 0, 0, -123, 0, 0, 0, 0, 0, -123, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0, 0, -123, 0, 0, 0, 0, 0, -123, 0, -123,
        // State 110
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, -119, 0, 0, 0, -119, 0, 0, 0, 0, 0, -119, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0, 0, -119, 0, 0, 0, 0, 0, -119, 0, -119,
        // State 111
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, -120, 0, 0, 0, -120, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, -120, 0, 0, 0, 0, 0, -120, 0, -120,
        // State 112
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, -121, 0, 0, 0, -121, 0, 0, 0, 0, 0, -121, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0, 0, -121, 0, 0, 0, 0, 0, -121, 0, -121,
        // State 113
        -143, 0, 0, -143, -143, 0, 0, 0, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 114
        0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 115
        -133, 0, 0, -133, -133, 0, 0, 0, 0, 0, 0, -133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 116
        -131, 0, 0, -131, -131, 0, 0, 0, 0, 0, 0, -131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 117
        -129, 0, 0, -129, -129, 0, 0, 0, 0, 0, 0, -129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 118
        -132, 0, 0, -132, -132, 0, 0, 0, 0, 0, 0, -132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 119
        -130, 0, 0, -130, -130, 0, 0, 0, 0, 0, 0, -130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 120
        -126, 0, 0, -126, -126, 0, 0, 0, 0, 0, 0, -126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 121
        -127, 0, 0, -127, -127, 0, 0, 0, 0, 0, 0, -127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 122
        -128, 0, 0, -128, -128, 0, 0, 0, 0, 0, 0, -128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 123
        0, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 124
        -142, 0, 0, -142, -142, 0, 0, 0, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 125
        0, 0, -21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -21, 0, 0, 0, 0, -21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 126
        0, 0, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, 0, 0, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 127
        0, 0, -35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -35, 0, 0, 0, 0, -35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 128
        0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -17, 0, 0, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 129
        -135, 0, 0, -135, -135, 0, 0, 0, 0, 0, 0, -135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 130
        -134, 0, 0, -134, -134, 0, 0, 0, 0, 0, 0, -134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 131
        -136, 0, 0, -136, -136, 0, 0, 0, 0, 0, 0, -136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 132
        -137, 0, 0, -137, -137, 0, 0, 0, 0, 0, 0, -137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 133
        0, 0, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -48, 0, 0, 0, 0, 0, 0, 170, 0, 0, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 134
        0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 135
        0, 0, -49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 136
        0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 137
        0, 0, -66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 138
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 139
        0, 0, -138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -138, 0, 0, 0, 0, -138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 140
        0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 141
        0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 142
        0, 0, -29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -29, 0, 0, 0, 0, -29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179, 0, 0, -29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 143
        0, 0, -30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 144
        0, 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 145
        0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 146
        0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 147
        0, -92, -92, 0, 0, -92, 0, 0, 0, 0, 0, 0, 0, 0, -92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -92, -92, 0, -92, 0, -92, 0, 0, 0, 0, 0, 0, 0, -92, 0, 0, 0, 0, 0, 0, 0, 0, -92, 0, 0, 0, 0, -92, 0, 0, 0, -92, 0, 0, 0, 0, 0, 0, 0, 0, -92, 0,
        // State 148
        -79, 0, 0, -79, -79, 0, 0, 0, 0, 0, 0, -79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 149
        -73, 0, 0, -73, -73, 0, 0, 0, 0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 150
        -75, 0, 0, -75, -75, 0, 0, 0, 0, 0, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 151
        -74, 0, 0, -74, -74, 0, 0, 0, 0, 0, 0, -74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 152
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
        // State 153
        -76, 0, 0, -76, -76, 0, 0, 0, 0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 154
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 155
        0, 0, -27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -27, 0, 0, 0, 0, -27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 156
        0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 157
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, -108, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, -108, 0, -108,
        // State 158
        0, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -115, 0, 0, 0, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 159
        0, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 0, 0, 0, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 160
        0, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 161
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, -109, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, -109, 0, -109,
        // State 162
        0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 163
        0, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -113, 0, 0, 0, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 164
        0, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, 0, 0, 0, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 165
        0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 166
        0, 0, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -20, 0, 0, 0, 0, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 167
        0, 0, -16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 168
        0, 0, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, 0, 0, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 169
        0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 170
        0, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 171
        0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 172
        0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 173
        0, 0, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 174
        0, 0, -156, 0, 0, 0, 0, 0, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0, 0, 0, -156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, -156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 175
        0, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 176
        0, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 177
        0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 178
        0, 0, -28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -28, 0, 0, 0, 0, -28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 179
        0, -146, -146, 0, 0, -146, 0, 0, 0, 0, 0, -146, 0, 0, -146, 0, 0, -146, 0, 0, 0, -146, 0, 0, 0, 0, -146, -146, 0, -146, 0, -146, 0, 0, 0, 0, 0, 0, -146, -146, 0, 0, 0, 0, 0, -146, -146, 0, -146, 0, 0, 0, 0, -146, -146, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, -146, 0,
        // State 180
        0, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 181
        0, -84, -84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -84, -84, 0, 44, 0, -84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -84, 0, 0, 0, 0, -84, 0, 0, 0, -84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 182
        0, -83, -83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -83, -83, 0, 44, 0, -83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -83, 0, 0, 0, 0, -83, 0, 0, 0, -83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 183
        0, -87, -87, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, -87, 0, -87, 0, -87, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, -87, 0, 0, 0, 0, -87, 0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
        // State 184
        0, -86, -86, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, -86, 0, -86, 0, -86, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, -86, 0, 0, 0, 0, -86, 0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
        // State 185
        0, -89, -89, 0, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -89, -89, 0, -89, 0, -89, 0, 0, 0, 0, 0, 0, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, -89, 0, 0, 0, 0, -89, 0, 0, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, -89, 0,
        // State 186
        0, -90, -90, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, -90, 0, -90, 0, -90, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, -90, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0,
        // State 187
        0, -91, -91, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, -91, 0, -91, 0, -91, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, -91, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0,
        // State 188
        0, 203, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 189
        -77, 0, 0, -77, -77, 0, 0, 0, 0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 190
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
        // State 191
        0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -25, 0, 0, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 192
        0, 0, -26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -26, 0, 0, 0, 0, -26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 193
        0, 0, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -14, 0, 0, 0, 0, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 194
        0, 0, -32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -32, 0, 0, 0, 0, -32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 195
        0, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 196
        0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 197
        0, 0, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 198
        0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 199
        0, 0, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 200
        0, 0, -152, 0, 0, 0, 0, 0, 0, 0, 0, 209, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0, 0, 0, -152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, -152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 201
        0, 0, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 202
        0, -93, -93, 0, 0, -93, 0, 0, 0, 0, 0, 0, 0, 0, -93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -93, -93, 0, -93, 0, -93, 0, 0, 0, 0, 0, 0, 0, -93, 0, 0, 0, 0, 0, 0, 0, 0, -93, 0, 0, 0, 0, -93, 0, 0, 0, -93, 0, 0, 0, 0, 0, 0, 0, 0, -93, 0,
        // State 203
        0, 0, -52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 204
        0, 0, -50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 205
        0, 0, -51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 206
        0, 0, -24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, 0, 0, 0, 0, -24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 207
        0, 0, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 208
        0, 0, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0, 0, 0, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 211, 0, 0, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 209
        0, 0, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 210
        0, 0, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
    fn __action(state: i16, integer: usize) -> i16 {
        __ACTION[(state as usize) * 68 + integer]
    }
    const __EOF_ACTION: &[i16] = &[
        // State 0
        0,
        // State 1
        0,
        // State 2
        0,
        // State 3
        -54,
        // State 4
        0,
        // State 5
        0,
        // State 6
        0,
        // State 7
        0,
        // State 8
        0,
        // State 9
        0,
        // State 10
        0,
        // State 11
        0,
        // State 12
        0,
        // State 13
        0,
        // State 14
        0,
        // State 15
        0,
        // State 16
        0,
        // State 17
        0,
        // State 18
        0,
        // State 19
        0,
        // State 20
        0,
        // State 21
        0,
        // State 22
        0,
        // State 23
        0,
        // State 24
        0,
        // State 25
        0,
        // State 26
        0,
        // State 27
        0,
        // State 28
        0,
        // State 29
        0,
        // State 30
        0,
        // State 31
        0,
        // State 32
        0,
        // State 33
        0,
        // State 34
        0,
        // State 35
        0,
        // State 36
        0,
        // State 37
        0,
        // State 38
        0,
        // State 39
        0,
        // State 40
        0,
        // State 41
        0,
        // State 42
        0,
        // State 43
        0,
        // State 44
        0,
        // State 45
        0,
        // State 46
        0,
        // State 47
        0,
        // State 48
        0,
        // State 49
        0,
        // State 50
        0,
        // State 51
        0,
        // State 52
        0,
        // State 53
        0,
        // State 54
        0,
        // State 55
        0,
        // State 56
        0,
        // State 57
        0,
        // State 58
        -161,
        // State 59
        0,
        // State 60
        0,
        // State 61
        -106,
        // State 62
        0,
        // State 63
        -105,
        // State 64
        0,
        // State 65
        0,
        // State 66
        0,
        // State 67
        0,
        // State 68
        -104,
        // State 69
        0,
        // State 70
        0,
        // State 71
        0,
        // State 72
        0,
        // State 73
        0,
        // State 74
        0,
        // State 75
        -103,
        // State 76
        -102,
        // State 77
        -107,
        // State 78
        0,
        // State 79
        0,
        // State 80
        0,
        // State 81
        0,
        // State 82
        0,
        // State 83
        0,
        // State 84
        0,
        // State 85
        0,
        // State 86
        0,
        // State 87
        0,
        // State 88
        0,
        // State 89
        0,
        // State 90
        0,
        // State 91
        0,
        // State 92
        0,
        // State 93
        0,
        // State 94
        0,
        // State 95
        0,
        // State 96
        0,
        // State 97
        0,
        // State 98
        0,
        // State 99
        0,
        // State 100
        0,
        // State 101
        0,
        // State 102
        0,
        // State 103
        0,
        // State 104
        0,
        // State 105
        0,
        // State 106
        0,
        // State 107
        0,
        // State 108
        0,
        // State 109
        0,
        // State 110
        0,
        // State 111
        0,
        // State 112
        0,
        // State 113
        0,
        // State 114
        0,
        // State 115
        0,
        // State 116
        0,
        // State 117
        0,
        // State 118
        0,
        // State 119
        0,
        // State 120
        0,
        // State 121
        0,
        // State 122
        0,
        // State 123
        0,
        // State 124
        0,
        // State 125
        0,
        // State 126
        0,
        // State 127
        0,
        // State 128
        0,
        // State 129
        0,
        // State 130
        0,
        // State 131
        0,
        // State 132
        0,
        // State 133
        0,
        // State 134
        0,
        // State 135
        0,
        // State 136
        0,
        // State 137
        0,
        // State 138
        0,
        // State 139
        0,
        // State 140
        0,
        // State 141
        0,
        // State 142
        0,
        // State 143
        0,
        // State 144
        0,
        // State 145
        0,
        // State 146
        0,
        // State 147
        0,
        // State 148
        0,
        // State 149
        0,
        // State 150
        0,
        // State 151
        0,
        // State 152
        0,
        // State 153
        0,
        // State 154
        0,
        // State 155
        0,
        // State 156
        0,
        // State 157
        0,
        // State 158
        0,
        // State 159
        0,
        // State 160
        0,
        // State 161
        0,
        // State 162
        0,
        // State 163
        0,
        // State 164
        0,
        // State 165
        0,
        // State 166
        0,
        // State 167
        0,
        // State 168
        0,
        // State 169
        0,
        // State 170
        0,
        // State 171
        0,
        // State 172
        0,
        // State 173
        0,
        // State 174
        0,
        // State 175
        0,
        // State 176
        0,
        // State 177
        0,
        // State 178
        0,
        // State 179
        0,
        // State 180
        0,
        // State 181
        0,
        // State 182
        0,
        // State 183
        0,
        // State 184
        0,
        // State 185
        0,
        // State 186
        0,
        // State 187
        0,
        // State 188
        0,
        // State 189
        0,
        // State 190
        0,
        // State 191
        0,
        // State 192
        0,
        // State 193
        0,
        // State 194
        0,
        // State 195
        0,
        // State 196
        0,
        // State 197
        0,
        // State 198
        0,
        // State 199
        0,
        // State 200
        0,
        // State 201
        0,
        // State 202
        0,
        // State 203
        0,
        // State 204
        0,
        // State 205
        0,
        // State 206
        0,
        // State 207
        0,
        // State 208
        0,
        // State 209
        0,
        // State 210
        0,
    ];
    fn __goto(state: i16, nt: usize) -> i16 {
        match nt {
            2 => 1,
            3 => match state {
                12 => 128,
                30 => 166,
                31 => 167,
                _ => 125,
            },
            5 => match state {
                18 => 137,
                _ => 17,
            },
            7 => 57,
            8 => match state {
                19 => 138,
                21 => 140,
                24 => 144,
                25 => 145,
                26 => 146,
                39 => 180,
                47 => 188,
                _ => 94,
            },
            9 => 58,
            10 => 22,
            11 => match state {
                2 => 74,
                _ => 59,
            },
            12 => 23,
            14 => 25,
            16 => 95,
            17 => match state {
                40 => 181,
                41 => 182,
                _ => 96,
            },
            18 => match state {
                42 => 183,
                43 => 184,
                _ => 97,
            },
            19 => match state {
                27 => 147,
                44 => 185,
                45 => 186,
                46 => 187,
                _ => 98,
            },
            20 => 2,
            21 => 60,
            22 => match state {
                3 => 77,
                _ => 61,
            },
            23 => 3,
            24 => match state {
                49 => 56,
                _ => 48,
            },
            26 => match state {
                48 => 191,
                49 => 192,
                56 => 206,
                _ => 155,
            },
            27 => 28,
            28 => 29,
            29 => 32,
            30 => match state {
                17 => 136,
                _ => 18,
            },
            32 => match state {
                4 => 21,
                _ => 62,
            },
            33 => match state {
                15 => 33,
                6 => 87,
                9 => 114,
                14 => 133,
                16 => 135,
                20 => 139,
                22 => 141,
                23 => 142,
                29 => 165,
                32 => 168,
                35 => 173,
                36 => 174,
                37 => 175,
                38 => 177,
                50 => 193,
                51 => 194,
                53 => 197,
                54 => 200,
                55 => 201,
                _ => 99,
            },
            35 => match state {
                33 => 171,
                34 => 172,
                52 => 196,
                _ => 134,
            },
            _ => 0,
        }
    }
    const __TERMINAL: &[&str] = &[
        r###""(""###,
        r###"")""###,
        r###"EoF"###,
        r###"Id"###,
        r###"Int"###,
        r###"and"###,
        r###"block"###,
        r###"clear"###,
        r###"codeblock_content"###,
        r###"codeblock_start"###,
        r###"colon"###,
        r###"comma"###,
        r###"dec"###,
        r###"define"###,
        r###"div"###,
        r###"equal"###,
        r###"exec"###,
        r###"gpio"###,
        r###"ifempty"###,
        r###"iffull"###,
        r###"in_"###,
        r###"irq"###,
        r###"isr"###,
        r###"jmp"###,
        r###"lang_opt"###,
        r###"langopt_int"###,
        r###"lbracket"###,
        r###"min"###,
        r###"mov"###,
        r###"mul"###,
        r###"neq"###,
        r###"newline"###,
        r###"noblock"###,
        r###"non_ws"###,
        r###"nop"###,
        r###"not"###,
        r###"nowait"###,
        r###"null"###,
        r###"opt"###,
        r###"or"###,
        r###"origin"###,
        r###"osr"###,
        r###"osre"###,
        r###"out"###,
        r###"pc"###,
        r###"pin"###,
        r###"pindirs"###,
        r###"pins"###,
        r###"plus"###,
        r###"program"###,
        r###"public"###,
        r###"pull"###,
        r###"push"###,
        r###"rbracket"###,
        r###"rel"###,
        r###"rev"###,
        r###"set"###,
        r###"side"###,
        r###"side_set"###,
        r###"status"###,
        r###"string"###,
        r###"wait"###,
        r###"word"###,
        r###"wrap"###,
        r###"wrap_target"###,
        r###"x"###,
        r###"xor"###,
        r###"y"###,
    ];
    fn __expected_tokens(__state: i16) -> alloc::vec::Vec<alloc::string::String> {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            let next_state = __action(__state, index);
            if next_state == 0 {
                None
            } else {
                Some(alloc::string::ToString::to_string(terminal))
            }
        }).collect()
    }
    fn __expected_tokens_from_states<
        'i,
    >(
        __states: &[i16],
        _: core::marker::PhantomData<(&'i ())>,
    ) -> alloc::vec::Vec<alloc::string::String>
    {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            if __accepts(None, __states, Some(index), core::marker::PhantomData::<(&())>) {
                Some(alloc::string::ToString::to_string(terminal))
            } else {
                None
            }
        }).collect()
    }
    pub(crate) struct __StateMachine<'i>
    where 
    {
        __phantom: core::marker::PhantomData<(&'i ())>,
    }
    impl<'i> __state_machine::ParserDefinition for __StateMachine<'i>
    where 
    {
        type Location = usize;
        type Error = lexer::Error;
        type Token = Token<'i>;
        type TokenIndex = usize;
        type Symbol = __Symbol<'i>;
        type Success = alloc::vec::Vec<Option<Line<'i>>>;
        type StateIndex = i16;
        type Action = i16;
        type ReduceIndex = i16;
        type NonterminalIndex = usize;

        #[inline]
        fn start_location(&self) -> Self::Location {
              Default::default()
        }

        #[inline]
        fn start_state(&self) -> Self::StateIndex {
              0
        }

        #[inline]
        fn token_to_index(&self, token: &Self::Token) -> Option<usize> {
            __token_to_integer(token, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn action(&self, state: i16, integer: usize) -> i16 {
            __action(state, integer)
        }

        #[inline]
        fn error_action(&self, state: i16) -> i16 {
            __action(state, 68 - 1)
        }

        #[inline]
        fn eof_action(&self, state: i16) -> i16 {
            __EOF_ACTION[state as usize]
        }

        #[inline]
        fn goto(&self, state: i16, nt: usize) -> i16 {
            __goto(state, nt)
        }

        fn token_to_symbol(&self, token_index: usize, token: Self::Token) -> Self::Symbol {
            __token_to_symbol(token_index, token, core::marker::PhantomData::<(&())>)
        }

        fn expected_tokens(&self, state: i16) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens(state)
        }

        fn expected_tokens_from_states(&self, states: &[i16]) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens_from_states(states, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn uses_error_recovery(&self) -> bool {
            false
        }

        #[inline]
        fn error_recovery_symbol(
            &self,
            recovery: __state_machine::ErrorRecovery<Self>,
        ) -> Self::Symbol {
            panic!("error recovery not enabled for this grammar")
        }

        fn reduce(
            &mut self,
            action: i16,
            start_location: Option<&Self::Location>,
            states: &mut alloc::vec::Vec<i16>,
            symbols: &mut alloc::vec::Vec<__state_machine::SymbolTriple<Self>>,
        ) -> Option<__state_machine::ParseResult<Self>> {
            __reduce(
                action,
                start_location,
                states,
                symbols,
                core::marker::PhantomData::<(&())>,
            )
        }

        fn simulate_reduce(&self, action: i16) -> __state_machine::SimulatedReduce<Self> {
            __simulate_reduce(action, core::marker::PhantomData::<(&())>)
        }
    }
    fn __token_to_integer<
        'i,
    >(
        __token: &Token<'i>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> Option<usize>
    {
        match *__token {
            Token::LParen if true => Some(0),
            Token::RParen if true => Some(1),
            Token::EndOfFile if true => Some(2),
            Token::Id(_) if true => Some(3),
            Token::Int(_) if true => Some(4),
            Token::And if true => Some(5),
            Token::Block if true => Some(6),
            Token::Clear if true => Some(7),
            Token::CodeBlockContent(_) if true => Some(8),
            Token::CodeBlockStart(_) if true => Some(9),
            Token::Colon if true => Some(10),
            Token::Comma if true => Some(11),
            Token::Decrement if true => Some(12),
            Token::Define if true => Some(13),
            Token::Divide if true => Some(14),
            Token::Equal if true => Some(15),
            Token::Exec if true => Some(16),
            Token::Gpio if true => Some(17),
            Token::IfEmpty if true => Some(18),
            Token::IfFull if true => Some(19),
            Token::In if true => Some(20),
            Token::Irq if true => Some(21),
            Token::Isr if true => Some(22),
            Token::Jmp if true => Some(23),
            Token::LangOpt if true => Some(24),
            Token::LangOptInt(_) if true => Some(25),
            Token::LBracket if true => Some(26),
            Token::Minus if true => Some(27),
            Token::Mov if true => Some(28),
            Token::Multiply if true => Some(29),
            Token::NotEqual if true => Some(30),
            Token::NewLine if true => Some(31),
            Token::NoBlock if true => Some(32),
            Token::NonWS(_) if true => Some(33),
            Token::Nop if true => Some(34),
            Token::Not if true => Some(35),
            Token::NoWait if true => Some(36),
            Token::Null if true => Some(37),
            Token::Optional if true => Some(38),
            Token::Or if true => Some(39),
            Token::Origin if true => Some(40),
            Token::Osr if true => Some(41),
            Token::Osre if true => Some(42),
            Token::Out if true => Some(43),
            Token::Pc if true => Some(44),
            Token::Pin if true => Some(45),
            Token::Pindirs if true => Some(46),
            Token::Pins if true => Some(47),
            Token::Plus if true => Some(48),
            Token::Program if true => Some(49),
            Token::Public if true => Some(50),
            Token::Pull if true => Some(51),
            Token::Push if true => Some(52),
            Token::RBracket if true => Some(53),
            Token::Rel if true => Some(54),
            Token::Reverse if true => Some(55),
            Token::Set if true => Some(56),
            Token::Side if true => Some(57),
            Token::SideSet if true => Some(58),
            Token::Status if true => Some(59),
            Token::String(_) if true => Some(60),
            Token::Wait if true => Some(61),
            Token::Word if true => Some(62),
            Token::Wrap if true => Some(63),
            Token::WrapTarget if true => Some(64),
            Token::X if true => Some(65),
            Token::Xor if true => Some(66),
            Token::Y if true => Some(67),
            _ => None,
        }
    }
    fn __token_to_symbol<
        'i,
    >(
        __token_index: usize,
        __token: Token<'i>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> __Symbol<'i>
    {
        match __token_index {
            0 | 1 | 2 | 5 | 6 | 7 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 61 | 62 | 63 | 64 | 65 | 66 | 67 => __Symbol::Variant0(__token),
            3 | 8 | 9 | 25 | 33 | 60 => match __token {
                Token::Id(__tok0) | Token::CodeBlockContent(__tok0) | Token::CodeBlockStart(__tok0) | Token::LangOptInt(__tok0) | Token::NonWS(__tok0) | Token::String(__tok0) if true => __Symbol::Variant1(__tok0),
                _ => unreachable!(),
            },
            4 => match __token {
                Token::Int(__tok0) if true => __Symbol::Variant2(__tok0),
                _ => unreachable!(),
            },
            _ => unreachable!(),
        }
    }
    fn __simulate_reduce<
        'i,
    >(
        __reduce_index: i16,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> __state_machine::SimulatedReduce<__StateMachine<'i>>
    {
        match __reduce_index {
            0 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 0,
                }
            }
            1 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 1,
                }
            }
            2 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 2,
                }
            }
            3 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            4 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            5 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            6 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            7 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            8 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            9 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            10 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            11 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            12 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            13 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            14 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            15 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            16 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            17 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            18 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 2,
                }
            }
            19 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            20 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            21 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            22 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 2,
                }
            }
            23 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 2,
                }
            }
            24 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            25 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            26 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            27 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            28 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            29 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            30 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            31 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 2,
                }
            }
            32 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 2,
                }
            }
            33 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 3,
                }
            }
            34 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 3,
                }
            }
            35 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 4,
                }
            }
            36 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 4,
                }
            }
            37 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 5,
                }
            }
            38 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 6,
                }
            }
            39 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 6,
                }
            }
            40 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 7,
                }
            }
            41 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 7,
                }
            }
            42 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 7,
                }
            }
            43 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 7,
                }
            }
            44 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 7,
                }
            }
            45 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 7,
                }
            }
            46 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 7,
                }
            }
            47 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 7,
                }
            }
            48 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 7,
                }
            }
            49 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 7,
                }
            }
            50 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 7,
                }
            }
            51 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 7,
                }
            }
            52 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 8,
                }
            }
            53 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 9,
                }
            }
            54 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            55 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            56 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            57 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            58 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            59 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            60 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            61 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 11,
                }
            }
            62 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 11,
                }
            }
            63 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 11,
                }
            }
            64 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 11,
                }
            }
            65 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 11,
                }
            }
            66 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            67 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            68 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            69 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            70 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 13,
                }
            }
            71 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 13,
                }
            }
            72 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 14,
                }
            }
            73 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 14,
                }
            }
            74 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 14,
                }
            }
            75 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 14,
                }
            }
            76 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 14,
                }
            }
            77 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 14,
                }
            }
            78 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 14,
                }
            }
            79 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 15,
                }
            }
            80 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 15,
                }
            }
            81 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 16,
                }
            }
            82 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 16,
                }
            }
            83 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 16,
                }
            }
            84 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 17,
                }
            }
            85 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 17,
                }
            }
            86 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 17,
                }
            }
            87 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 18,
                }
            }
            88 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 18,
                }
            }
            89 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 18,
                }
            }
            90 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 18,
                }
            }
            91 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 19,
                }
            }
            92 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 19,
                }
            }
            93 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 19,
                }
            }
            94 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 20,
                }
            }
            95 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 21,
                }
            }
            96 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 21,
                }
            }
            97 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 21,
                }
            }
            98 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 21,
                }
            }
            99 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 21,
                }
            }
            100 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 21,
                }
            }
            101 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            102 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            103 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 22,
                }
            }
            104 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 22,
                }
            }
            105 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 23,
                }
            }
            106 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 23,
                }
            }
            107 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 24,
                }
            }
            108 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 24,
                }
            }
            109 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 25,
                }
            }
            110 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 25,
                }
            }
            111 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            112 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            113 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            114 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            115 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            116 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            117 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            118 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            119 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            120 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            121 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            122 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            123 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            124 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 27,
                }
            }
            125 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            126 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            127 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            128 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            129 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            130 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            131 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            132 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 28,
                }
            }
            133 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 29,
                }
            }
            134 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 29,
                }
            }
            135 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 29,
                }
            }
            136 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 29,
                }
            }
            137 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 30,
                }
            }
            138 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 31,
                }
            }
            139 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 31,
                }
            }
            140 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 32,
                }
            }
            141 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 32,
                }
            }
            142 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 32,
                }
            }
            143 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 33,
                }
            }
            144 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 33,
                }
            }
            145 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 33,
                }
            }
            146 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 34,
                }
            }
            147 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 34,
                }
            }
            148 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 35,
                }
            }
            149 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 35,
                }
            }
            150 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 35,
                }
            }
            151 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 35,
                }
            }
            152 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 35,
                }
            }
            153 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 35,
                }
            }
            154 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 35,
                }
            }
            155 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 35,
                }
            }
            156 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 35,
                }
            }
            157 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 35,
                }
            }
            158 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 35,
                }
            }
            159 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 35,
                }
            }
            160 => __state_machine::SimulatedReduce::Accept,
            161 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 37,
                }
            }
            162 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 37,
                }
            }
            163 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 38,
                }
            }
            164 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 38,
                }
            }
            165 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 39,
                }
            }
            166 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 39,
                }
            }
            167 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 40,
                }
            }
            168 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 40,
                }
            }
            169 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 41,
                }
            }
            170 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 41,
                }
            }
            171 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 42,
                }
            }
            172 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 42,
                }
            }
            _ => panic!("invalid reduction index {}", __reduce_index)
        }
    }
    pub(crate) struct FileParser {
        _priv: (),
    }

    impl FileParser {
        pub(crate) fn new() -> FileParser {
            FileParser {
                _priv: (),
            }
        }

        #[allow(dead_code)]
        pub(crate) fn parse<
            'i,
            __TOKEN: __ToTriple<'i, >,
            __TOKENS: IntoIterator<Item=__TOKEN>,
        >(
            &self,
            __tokens0: __TOKENS,
        ) -> Result<alloc::vec::Vec<Option<Line<'i>>>, __lalrpop_util::ParseError<usize, Token<'i>, lexer::Error>>
        {
            let __tokens = __tokens0.into_iter();
            let mut __tokens = __tokens.map(|t| __ToTriple::to_triple(t));
            __state_machine::Parser::drive(
                __StateMachine {
                    __phantom: core::marker::PhantomData::<(&())>,
                },
                __tokens,
            )
        }
    }
    fn __accepts<
        'i,
    >(
        __error_state: Option<i16>,
        __states: &[i16],
        __opt_integer: Option<usize>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> bool
    {
        let mut __states = __states.to_vec();
        __states.extend(__error_state);
        loop {
            let mut __states_len = __states.len();
            let __top = __states[__states_len - 1];
            let __action = match __opt_integer {
                None => __EOF_ACTION[__top as usize],
                Some(__integer) => __action(__top, __integer),
            };
            if __action == 0 { return false; }
            if __action > 0 { return true; }
            let (__to_pop, __nt) = match __simulate_reduce(-(__action + 1), core::marker::PhantomData::<(&())>) {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop, nonterminal_produced
                } => (states_to_pop, nonterminal_produced),
                __state_machine::SimulatedReduce::Accept => return true,
            };
            __states_len -= __to_pop;
            __states.truncate(__states_len);
            let __top = __states[__states_len - 1];
            let __next_state = __goto(__top, __nt);
            __states.push(__next_state);
        }
    }
    pub(crate) fn __reduce<
        'i,
    >(
        __action: i16,
        __lookahead_start: Option<&usize>,
        __states: &mut alloc::vec::Vec<i16>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> Option<Result<alloc::vec::Vec<Option<Line<'i>>>,__lalrpop_util::ParseError<usize, Token<'i>, lexer::Error>>>
    {
        let (__pop_states, __nonterminal) = match __action {
            0 => {
                __reduce0(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            1 => {
                __reduce1(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            2 => {
                __reduce2(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            3 => {
                __reduce3(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            4 => {
                __reduce4(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            5 => {
                __reduce5(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            6 => {
                __reduce6(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            7 => {
                __reduce7(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            8 => {
                __reduce8(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            9 => {
                __reduce9(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            10 => {
                __reduce10(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            11 => {
                __reduce11(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            12 => {
                __reduce12(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            13 => {
                __reduce13(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            14 => {
                __reduce14(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            15 => {
                __reduce15(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            16 => {
                __reduce16(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            17 => {
                __reduce17(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            18 => {
                __reduce18(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            19 => {
                __reduce19(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            20 => {
                __reduce20(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            21 => {
                __reduce21(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            22 => {
                __reduce22(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            23 => {
                __reduce23(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            24 => {
                __reduce24(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            25 => {
                __reduce25(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            26 => {
                __reduce26(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            27 => {
                __reduce27(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            28 => {
                __reduce28(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            29 => {
                __reduce29(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            30 => {
                __reduce30(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            31 => {
                __reduce31(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            32 => {
                __reduce32(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            33 => {
                __reduce33(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            34 => {
                __reduce34(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            35 => {
                __reduce35(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            36 => {
                __reduce36(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            37 => {
                __reduce37(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            38 => {
                __reduce38(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            39 => {
                __reduce39(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            40 => {
                __reduce40(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            41 => {
                __reduce41(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            42 => {
                __reduce42(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            43 => {
                __reduce43(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            44 => {
                __reduce44(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            45 => {
                __reduce45(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            46 => {
                __reduce46(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            47 => {
                __reduce47(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            48 => {
                __reduce48(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            49 => {
                __reduce49(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            50 => {
                __reduce50(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            51 => {
                __reduce51(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            52 => {
                __reduce52(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            53 => {
                __reduce53(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            54 => {
                __reduce54(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            55 => {
                __reduce55(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            56 => {
                __reduce56(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            57 => {
                __reduce57(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            58 => {
                __reduce58(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            59 => {
                __reduce59(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            60 => {
                __reduce60(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            61 => {
                __reduce61(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            62 => {
                __reduce62(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            63 => {
                __reduce63(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            64 => {
                __reduce64(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            65 => {
                __reduce65(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            66 => {
                __reduce66(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            67 => {
                __reduce67(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            68 => {
                __reduce68(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            69 => {
                __reduce69(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            70 => {
                __reduce70(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            71 => {
                __reduce71(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            72 => {
                __reduce72(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            73 => {
                __reduce73(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            74 => {
                __reduce74(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            75 => {
                __reduce75(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            76 => {
                __reduce76(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            77 => {
                __reduce77(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            78 => {
                __reduce78(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            79 => {
                __reduce79(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            80 => {
                __reduce80(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            81 => {
                __reduce81(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            82 => {
                __reduce82(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            83 => {
                __reduce83(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            84 => {
                __reduce84(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            85 => {
                __reduce85(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            86 => {
                __reduce86(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            87 => {
                __reduce87(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            88 => {
                __reduce88(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            89 => {
                __reduce89(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            90 => {
                __reduce90(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            91 => {
                __reduce91(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            92 => {
                __reduce92(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            93 => {
                __reduce93(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            94 => {
                __reduce94(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            95 => {
                __reduce95(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            96 => {
                __reduce96(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            97 => {
                __reduce97(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            98 => {
                __reduce98(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            99 => {
                __reduce99(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            100 => {
                __reduce100(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            101 => {
                __reduce101(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            102 => {
                __reduce102(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            103 => {
                __reduce103(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            104 => {
                __reduce104(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            105 => {
                __reduce105(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            106 => {
                __reduce106(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            107 => {
                __reduce107(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            108 => {
                __reduce108(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            109 => {
                __reduce109(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            110 => {
                __reduce110(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            111 => {
                __reduce111(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            112 => {
                __reduce112(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            113 => {
                __reduce113(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            114 => {
                __reduce114(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            115 => {
                __reduce115(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            116 => {
                __reduce116(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            117 => {
                __reduce117(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            118 => {
                __reduce118(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            119 => {
                __reduce119(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            120 => {
                __reduce120(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            121 => {
                __reduce121(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            122 => {
                __reduce122(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            123 => {
                __reduce123(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            124 => {
                __reduce124(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            125 => {
                __reduce125(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            126 => {
                __reduce126(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            127 => {
                __reduce127(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            128 => {
                __reduce128(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            129 => {
                __reduce129(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            130 => {
                __reduce130(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            131 => {
                __reduce131(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            132 => {
                __reduce132(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            133 => {
                __reduce133(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            134 => {
                __reduce134(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            135 => {
                __reduce135(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            136 => {
                __reduce136(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            137 => {
                __reduce137(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            138 => {
                __reduce138(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            139 => {
                __reduce139(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            140 => {
                __reduce140(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            141 => {
                __reduce141(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            142 => {
                __reduce142(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            143 => {
                __reduce143(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            144 => {
                __reduce144(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            145 => {
                __reduce145(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            146 => {
                __reduce146(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            147 => {
                __reduce147(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            148 => {
                __reduce148(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            149 => {
                __reduce149(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            150 => {
                __reduce150(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            151 => {
                __reduce151(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            152 => {
                __reduce152(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            153 => {
                __reduce153(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            154 => {
                __reduce154(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            155 => {
                __reduce155(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            156 => {
                __reduce156(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            157 => {
                __reduce157(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            158 => {
                __reduce158(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            159 => {
                __reduce159(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            160 => {
                // __File = File => ActionFn(0);
                let __sym0 = __pop_Variant10(__symbols);
                let __start = __sym0.0;
                let __end = __sym0.2;
                let __nt = super::__action0::<>(__sym0);
                return Some(Ok(__nt));
            }
            161 => {
                __reduce161(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            162 => {
                __reduce162(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            163 => {
                __reduce163(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            164 => {
                __reduce164(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            165 => {
                __reduce165(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            166 => {
                __reduce166(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            167 => {
                __reduce167(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            168 => {
                __reduce168(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            169 => {
                __reduce169(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            170 => {
                __reduce170(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            171 => {
                __reduce171(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            172 => {
                __reduce172(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            _ => panic!("invalid action code {}", __action)
        };
        let __states_len = __states.len();
        __states.truncate(__states_len - __pop_states);
        let __state = *__states.last().unwrap();
        let __next_state = __goto(__state, __nonterminal);
        __states.push(__next_state);
        None
    }
    #[inline(never)]
    fn __symbol_type_mismatch() -> ! {
        panic!("symbol type mismatch")
    }
    fn __pop_Variant12<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, (Location, Instruction<'i>), usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant12(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant4<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, (Location, InstructionOperands<'i>), usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant4(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant9<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, Directive<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant9(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant7<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, Expression<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant7(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant11<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, InSource, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant11(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant13<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, IrqModifier, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant13(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant15<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, JmpCondition, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant15(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant18<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, Line<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant18(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant20<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, MovOp, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant20(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant22<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, MovSource, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant22(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant23<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, MovTarget, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant23(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant19<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, Option<Line<'i>>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant19(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant24<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, OutTarget, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant24(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant25<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, SetTarget, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant25(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant17<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, SymbolDef<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant17(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant0<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, Token<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant0(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant26<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, Value<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant26(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant28<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, WaitSource<'i>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant28(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant10<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, alloc::vec::Vec<Option<Line<'i>>>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant10(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant5<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, bool, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant5(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant8<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<Expression<'i>>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant8(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant14<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<IrqModifier>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant14(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant16<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<JmpCondition>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant16(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant21<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<MovOp>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant21(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant29<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<Token<'i>>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant29(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant27<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<Value<'i>>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant27(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant6<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, core::option::Option<bool>, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant6(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant2<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, i32, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant2(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant3<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, usize, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant3(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant1<
      'i,
    >(
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>
    ) -> (usize, &'i str, usize)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant1(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    pub(crate) fn __reduce0<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // @L =  => ActionFn(134);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action134::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 0)
    }
    pub(crate) fn __reduce1<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // @R =  => ActionFn(133);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action133::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 1)
    }
    pub(crate) fn __reduce2<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = nop => ActionFn(161);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action161::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 2)
    }
    pub(crate) fn __reduce3<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = jmp, JmpCondition, comma, Expression => ActionFn(203);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant7(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant15(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action203::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce4<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = jmp, JmpCondition, Expression => ActionFn(204);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant15(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action204::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce5<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = jmp, comma, Expression => ActionFn(205);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action205::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce6<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = jmp, Expression => ActionFn(206);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant7(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action206::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce7<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = wait, Value, comma, WaitSource => ActionFn(207);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant28(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action207::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce8<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = wait, Value, WaitSource => ActionFn(208);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant28(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action208::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce9<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = wait, comma, WaitSource => ActionFn(209);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant28(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action209::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce10<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = wait, WaitSource => ActionFn(210);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action210::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce11<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = in_, InSource, comma, Value => ActionFn(211);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant26(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant11(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action211::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce12<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = in_, InSource, Value => ActionFn(212);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant11(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action212::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce13<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = out, OutTarget, comma, Value => ActionFn(213);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant26(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action213::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce14<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = out, OutTarget, Value => ActionFn(214);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action214::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce15<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = push, iffull, Blocking => ActionFn(233);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant5(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action233::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce16<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = push, Blocking => ActionFn(234);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant5(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action234::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce17<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = push, iffull => ActionFn(235);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action235::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce18<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = push => ActionFn(236);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action236::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 2)
    }
    pub(crate) fn __reduce19<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = pull, ifempty, Blocking => ActionFn(229);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant5(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action229::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce20<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = pull, Blocking => ActionFn(230);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant5(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action230::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce21<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = pull, ifempty => ActionFn(231);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action231::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce22<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = pull => ActionFn(232);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action232::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 2)
    }
    pub(crate) fn __reduce23<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = mov, MovTarget, comma, MovOp, MovSource => ActionFn(215);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant22(__symbols);
        let __sym3 = __pop_Variant20(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action215::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (5, 2)
    }
    pub(crate) fn __reduce24<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = mov, MovTarget, MovOp, MovSource => ActionFn(216);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant22(__symbols);
        let __sym2 = __pop_Variant20(__symbols);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action216::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce25<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = mov, MovTarget, comma, MovSource => ActionFn(217);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant22(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action217::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce26<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = mov, MovTarget, MovSource => ActionFn(218);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant22(__symbols);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action218::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce27<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = irq, IrqModifier, Value, rel => ActionFn(243);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant13(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action243::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce28<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = irq, IrqModifier, Value => ActionFn(244);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant13(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action244::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce29<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = irq, Value, rel => ActionFn(245);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action245::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce30<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = irq, Value => ActionFn(246);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action246::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 2)
    }
    pub(crate) fn __reduce31<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = set, SetTarget, comma, Value => ActionFn(219);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant26(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant25(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action219::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (4, 2)
    }
    pub(crate) fn __reduce32<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // BaseInstruction = set, SetTarget, Value => ActionFn(220);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant25(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action220::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 2)
    }
    pub(crate) fn __reduce33<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Blocking = block => ActionFn(96);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action96::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (1, 3)
    }
    pub(crate) fn __reduce34<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Blocking = noblock => ActionFn(97);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action97::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (1, 3)
    }
    pub(crate) fn __reduce35<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Blocking? = Blocking => ActionFn(115);
        let __sym0 = __pop_Variant5(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action115::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 4)
    }
    pub(crate) fn __reduce36<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Blocking? =  => ActionFn(116);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action116::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (0, 4)
    }
    pub(crate) fn __reduce37<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Delay = lbracket, Expression, rbracket => ActionFn(54);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant7(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action54::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 5)
    }
    pub(crate) fn __reduce38<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Delay? = Delay => ActionFn(127);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action127::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (1, 6)
    }
    pub(crate) fn __reduce39<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Delay? =  => ActionFn(128);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action128::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (0, 6)
    }
    pub(crate) fn __reduce40<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = wrap => ActionFn(171);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action171::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (1, 7)
    }
    pub(crate) fn __reduce41<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = wrap_target => ActionFn(172);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action172::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (1, 7)
    }
    pub(crate) fn __reduce42<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = origin, Value => ActionFn(173);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action173::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (2, 7)
    }
    pub(crate) fn __reduce43<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = define, SymbolDef, Expression => ActionFn(18);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant17(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action18::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (3, 7)
    }
    pub(crate) fn __reduce44<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = side_set, Value, opt, pindirs => ActionFn(239);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action239::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (4, 7)
    }
    pub(crate) fn __reduce45<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = side_set, Value, opt => ActionFn(240);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action240::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (3, 7)
    }
    pub(crate) fn __reduce46<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = side_set, Value, pindirs => ActionFn(241);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action241::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (3, 7)
    }
    pub(crate) fn __reduce47<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = side_set, Value => ActionFn(242);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action242::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (2, 7)
    }
    pub(crate) fn __reduce48<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = word, Value => ActionFn(175);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action175::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (2, 7)
    }
    pub(crate) fn __reduce49<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = lang_opt, non_ws, non_ws, equal, non_ws => ActionFn(176);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant1(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant1(__symbols);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action176::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (5, 7)
    }
    pub(crate) fn __reduce50<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = lang_opt, non_ws, non_ws, equal, string => ActionFn(177);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant1(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant1(__symbols);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action177::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (5, 7)
    }
    pub(crate) fn __reduce51<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Directive = lang_opt, non_ws, non_ws, equal, langopt_int => ActionFn(178);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant1(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant1(__symbols);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action178::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (5, 7)
    }
    pub(crate) fn __reduce52<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Expression = L1Expr => ActionFn(27);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action27::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 8)
    }
    pub(crate) fn __reduce53<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // File = Lines+ => ActionFn(1);
        let __sym0 = __pop_Variant10(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action1::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 9)
    }
    pub(crate) fn __reduce54<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = pins => ActionFn(58);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action58::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce55<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = x => ActionFn(59);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action59::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce56<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = y => ActionFn(60);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action60::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce57<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = null => ActionFn(61);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action61::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce58<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = isr => ActionFn(62);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action62::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce59<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = osr => ActionFn(63);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action63::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce60<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // InSource = status => ActionFn(64);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action64::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 10)
    }
    pub(crate) fn __reduce61<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Instruction = BaseInstruction, Delay, SideSet => ActionFn(197);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant7(__symbols);
        let __sym0 = __pop_Variant4(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action197::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (3, 11)
    }
    pub(crate) fn __reduce62<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Instruction = BaseInstruction, Delay => ActionFn(198);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant7(__symbols);
        let __sym0 = __pop_Variant4(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action198::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (2, 11)
    }
    pub(crate) fn __reduce63<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Instruction = BaseInstruction, SideSet => ActionFn(199);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant4(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action199::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (2, 11)
    }
    pub(crate) fn __reduce64<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Instruction = BaseInstruction => ActionFn(200);
        let __sym0 = __pop_Variant4(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action200::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (1, 11)
    }
    pub(crate) fn __reduce65<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Instruction = BaseInstruction, SideSet, Delay => ActionFn(42);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant4(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action42::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (3, 11)
    }
    pub(crate) fn __reduce66<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // IrqModifier = clear => ActionFn(102);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action102::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 12)
    }
    pub(crate) fn __reduce67<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // IrqModifier = wait => ActionFn(103);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action103::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 12)
    }
    pub(crate) fn __reduce68<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // IrqModifier = nowait => ActionFn(104);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action104::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 12)
    }
    pub(crate) fn __reduce69<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // IrqModifier = set => ActionFn(105);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action105::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 12)
    }
    pub(crate) fn __reduce70<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // IrqModifier? = IrqModifier => ActionFn(109);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action109::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (1, 13)
    }
    pub(crate) fn __reduce71<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // IrqModifier? =  => ActionFn(110);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action110::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (0, 13)
    }
    pub(crate) fn __reduce72<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = not, x => ActionFn(73);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action73::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 14)
    }
    pub(crate) fn __reduce73<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = x, dec => ActionFn(74);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action74::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 14)
    }
    pub(crate) fn __reduce74<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = not, y => ActionFn(75);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action75::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 14)
    }
    pub(crate) fn __reduce75<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = y, dec => ActionFn(76);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action76::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 14)
    }
    pub(crate) fn __reduce76<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = x, neq, y => ActionFn(77);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action77::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (3, 14)
    }
    pub(crate) fn __reduce77<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = pin => ActionFn(78);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action78::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (1, 14)
    }
    pub(crate) fn __reduce78<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition = not, osre => ActionFn(79);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action79::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 14)
    }
    pub(crate) fn __reduce79<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition? = JmpCondition => ActionFn(123);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action123::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (1, 15)
    }
    pub(crate) fn __reduce80<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // JmpCondition? =  => ActionFn(124);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action124::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (0, 15)
    }
    pub(crate) fn __reduce81<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L1Expr = L2Expr => ActionFn(28);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action28::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 16)
    }
    pub(crate) fn __reduce82<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L1Expr = L1Expr, plus, L2Expr => ActionFn(29);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action29::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 16)
    }
    pub(crate) fn __reduce83<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L1Expr = L1Expr, min, L2Expr => ActionFn(30);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action30::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 16)
    }
    pub(crate) fn __reduce84<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L2Expr = L3Expr => ActionFn(31);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action31::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 17)
    }
    pub(crate) fn __reduce85<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L2Expr = L2Expr, mul, L3Expr => ActionFn(32);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action32::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 17)
    }
    pub(crate) fn __reduce86<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L2Expr = L2Expr, div, L3Expr => ActionFn(33);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action33::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 17)
    }
    pub(crate) fn __reduce87<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L3Expr = L4Expr => ActionFn(34);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action34::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 18)
    }
    pub(crate) fn __reduce88<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L3Expr = L3Expr, and, L4Expr => ActionFn(35);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action35::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 18)
    }
    pub(crate) fn __reduce89<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L3Expr = L3Expr, or, L4Expr => ActionFn(36);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action36::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 18)
    }
    pub(crate) fn __reduce90<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L3Expr = L3Expr, xor, L4Expr => ActionFn(37);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action37::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 18)
    }
    pub(crate) fn __reduce91<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L4Expr = min, L4Expr => ActionFn(38);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant7(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action38::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (2, 19)
    }
    pub(crate) fn __reduce92<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L4Expr = rev, "(", Expression, ")" => ActionFn(39);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant7(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action39::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (4, 19)
    }
    pub(crate) fn __reduce93<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // L4Expr = Value => ActionFn(40);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action40::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 19)
    }
    pub(crate) fn __reduce94<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Label = SymbolDef, colon => ActionFn(106);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action106::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 20)
    }
    pub(crate) fn __reduce95<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Line = program, Id => ActionFn(179);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action179::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 21)
    }
    pub(crate) fn __reduce96<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Line = Directive => ActionFn(7);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action7::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 21)
    }
    pub(crate) fn __reduce97<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Line = Instruction => ActionFn(8);
        let __sym0 = __pop_Variant12(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action8::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 21)
    }
    pub(crate) fn __reduce98<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Line = Label, Instruction => ActionFn(9);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant12(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action9::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 21)
    }
    pub(crate) fn __reduce99<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Line = Label => ActionFn(10);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action10::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 21)
    }
    pub(crate) fn __reduce100<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Line = codeblock_start, codeblock_content => ActionFn(11);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant1(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action11::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 21)
    }
    pub(crate) fn __reduce101<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Lines = Line, newline => ActionFn(2);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action2::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 22)
    }
    pub(crate) fn __reduce102<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Lines = Line, EoF => ActionFn(3);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action3::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 22)
    }
    pub(crate) fn __reduce103<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Lines = newline => ActionFn(4);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action4::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 22)
    }
    pub(crate) fn __reduce104<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Lines = EoF => ActionFn(5);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action5::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 22)
    }
    pub(crate) fn __reduce105<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Lines+ = Lines => ActionFn(135);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action135::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 23)
    }
    pub(crate) fn __reduce106<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Lines+ = Lines+, Lines => ActionFn(136);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant10(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action136::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (2, 23)
    }
    pub(crate) fn __reduce107<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovOp = not => ActionFn(80);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action80::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (1, 24)
    }
    pub(crate) fn __reduce108<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovOp = rev => ActionFn(81);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action81::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (1, 24)
    }
    pub(crate) fn __reduce109<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovOp? = MovOp => ActionFn(111);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action111::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (1, 25)
    }
    pub(crate) fn __reduce110<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovOp? =  => ActionFn(112);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action112::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (0, 25)
    }
    pub(crate) fn __reduce111<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = pins => ActionFn(89);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action89::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce112<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = x => ActionFn(90);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action90::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce113<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = y => ActionFn(91);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action91::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce114<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = null => ActionFn(92);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action92::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce115<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = status => ActionFn(93);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action93::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce116<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = isr => ActionFn(94);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action94::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce117<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovSource = osr => ActionFn(95);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action95::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    pub(crate) fn __reduce118<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = pins => ActionFn(82);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action82::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce119<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = x => ActionFn(83);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action83::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce120<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = y => ActionFn(84);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action84::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce121<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = exec => ActionFn(85);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action85::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce122<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = pc => ActionFn(86);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action86::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce123<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = isr => ActionFn(87);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action87::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce124<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // MovTarget = osr => ActionFn(88);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action88::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 27)
    }
    pub(crate) fn __reduce125<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = pins => ActionFn(65);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action65::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce126<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = x => ActionFn(66);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action66::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce127<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = y => ActionFn(67);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action67::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce128<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = null => ActionFn(68);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action68::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce129<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = pindirs => ActionFn(69);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action69::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce130<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = isr => ActionFn(70);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action70::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce131<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = pc => ActionFn(71);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action71::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce132<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // OutTarget = exec => ActionFn(72);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action72::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 28)
    }
    pub(crate) fn __reduce133<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SetTarget = pins => ActionFn(98);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action98::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 29)
    }
    pub(crate) fn __reduce134<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SetTarget = pindirs => ActionFn(99);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action99::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 29)
    }
    pub(crate) fn __reduce135<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SetTarget = x => ActionFn(100);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action100::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 29)
    }
    pub(crate) fn __reduce136<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SetTarget = y => ActionFn(101);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action101::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 29)
    }
    pub(crate) fn __reduce137<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SideSet = side, Value => ActionFn(53);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action53::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 30)
    }
    pub(crate) fn __reduce138<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SideSet? = SideSet => ActionFn(125);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action125::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (1, 31)
    }
    pub(crate) fn __reduce139<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SideSet? =  => ActionFn(126);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action126::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 31)
    }
    pub(crate) fn __reduce140<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SymbolDef = Id => ActionFn(180);
        let __sym0 = __pop_Variant1(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action180::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (1, 32)
    }
    pub(crate) fn __reduce141<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SymbolDef = public, Id => ActionFn(181);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action181::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 32)
    }
    pub(crate) fn __reduce142<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // SymbolDef = mul, Id => ActionFn(182);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant1(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action182::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 32)
    }
    pub(crate) fn __reduce143<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Value = Int => ActionFn(24);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action24::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 33)
    }
    pub(crate) fn __reduce144<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Value = Id => ActionFn(183);
        let __sym0 = __pop_Variant1(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action183::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 33)
    }
    pub(crate) fn __reduce145<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Value = "(", Expression, ")" => ActionFn(184);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant7(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action184::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 33)
    }
    pub(crate) fn __reduce146<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Value? = Value => ActionFn(119);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action119::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (1, 34)
    }
    pub(crate) fn __reduce147<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // Value? =  => ActionFn(120);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action120::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 34)
    }
    pub(crate) fn __reduce148<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, comma, Value, comma, rel => ActionFn(247);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action247::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (5, 35)
    }
    pub(crate) fn __reduce149<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, comma, Value, comma => ActionFn(248);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action248::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (4, 35)
    }
    pub(crate) fn __reduce150<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, comma, Value, rel => ActionFn(249);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action249::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (4, 35)
    }
    pub(crate) fn __reduce151<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, comma, Value => ActionFn(250);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action250::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 35)
    }
    pub(crate) fn __reduce152<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, Value, comma, rel => ActionFn(251);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action251::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (4, 35)
    }
    pub(crate) fn __reduce153<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, Value, comma => ActionFn(252);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action252::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 35)
    }
    pub(crate) fn __reduce154<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, Value, rel => ActionFn(253);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action253::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 35)
    }
    pub(crate) fn __reduce155<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = irq, Value => ActionFn(254);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action254::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (2, 35)
    }
    pub(crate) fn __reduce156<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = gpio, comma, Value => ActionFn(225);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action225::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 35)
    }
    pub(crate) fn __reduce157<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = gpio, Value => ActionFn(226);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action226::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (2, 35)
    }
    pub(crate) fn __reduce158<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = pin, comma, Value => ActionFn(227);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant26(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action227::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 35)
    }
    pub(crate) fn __reduce159<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // WaitSource = pin, Value => ActionFn(228);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action228::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (2, 35)
    }
    pub(crate) fn __reduce161<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // comma? = comma => ActionFn(121);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action121::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 37)
    }
    pub(crate) fn __reduce162<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // comma? =  => ActionFn(122);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action122::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 37)
    }
    pub(crate) fn __reduce163<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // ifempty? = ifempty => ActionFn(113);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action113::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 38)
    }
    pub(crate) fn __reduce164<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // ifempty? =  => ActionFn(114);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action114::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 38)
    }
    pub(crate) fn __reduce165<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // iffull? = iffull => ActionFn(117);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action117::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 39)
    }
    pub(crate) fn __reduce166<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // iffull? =  => ActionFn(118);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action118::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 39)
    }
    pub(crate) fn __reduce167<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // opt? = opt => ActionFn(131);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action131::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 40)
    }
    pub(crate) fn __reduce168<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // opt? =  => ActionFn(132);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action132::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 40)
    }
    pub(crate) fn __reduce169<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // pindirs? = pindirs => ActionFn(129);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action129::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 41)
    }
    pub(crate) fn __reduce170<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // pindirs? =  => ActionFn(130);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action130::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 41)
    }
    pub(crate) fn __reduce171<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // rel? = rel => ActionFn(107);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action107::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 42)
    }
    pub(crate) fn __reduce172<
        'i,
    >(
        __lookahead_start: Option<&usize>,
        __symbols: &mut alloc::vec::Vec<(usize,__Symbol<'i>,usize)>,
        _: core::marker::PhantomData<(&'i ())>,
    ) -> (usize, usize)
    {
        // rel? =  => ActionFn(108);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2.clone())).unwrap_or_default();
        let __end = __start.clone();
        let __nt = super::__action108::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 42)
    }
}
pub(crate) use self::__parse__File::FileParser;

#[allow(clippy::too_many_arguments)]
fn __action0<
    'i,
>(
    (_, __0, _): (usize, alloc::vec::Vec<Option<Line<'i>>>, usize),
) -> alloc::vec::Vec<Option<Line<'i>>>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action1<
    'i,
>(
    (_, __0, _): (usize, alloc::vec::Vec<Option<Line<'i>>>, usize),
) -> alloc::vec::Vec<Option<Line<'i>>>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action2<
    'i,
>(
    (_, __0, _): (usize, Line<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
) -> Option<Line<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action3<
    'i,
>(
    (_, __0, _): (usize, Line<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
) -> Option<Line<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action4<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> Option<Line<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action5<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> Option<Line<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action6<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, l, _): (usize, usize, usize),
    (_, name, _): (usize, &'i str, usize),
    (_, r, _): (usize, usize, usize),
) -> Line<'i>
{
    Line::Program { name, location: Location(l..r) }
}

#[allow(clippy::too_many_arguments)]
fn __action7<
    'i,
>(
    (_, __0, _): (usize, Directive<'i>, usize),
) -> Line<'i>
{
    Line::Directive(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action8<
    'i,
>(
    (_, i, _): (usize, (Location, Instruction<'i>), usize),
) -> Line<'i>
{
    Line::Instruction(i.0, i.1)
}

#[allow(clippy::too_many_arguments)]
fn __action9<
    'i,
>(
    (_, l, _): (usize, SymbolDef<'i>, usize),
    (_, i, _): (usize, (Location, Instruction<'i>), usize),
) -> Line<'i>
{
    Line::LabelAndInstr(l, i.1)
}

#[allow(clippy::too_many_arguments)]
fn __action10<
    'i,
>(
    (_, __0, _): (usize, SymbolDef<'i>, usize),
) -> Line<'i>
{
    Line::Label(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action11<
    'i,
>(
    (_, s, _): (usize, &'i str, usize),
    (_, c, _): (usize, &'i str, usize),
) -> Line<'i>
{
    Line::CodeBlock(s, c)
}

#[allow(clippy::too_many_arguments)]
fn __action12<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, name, _): (usize, &'i str, usize),
    (_, r, _): (usize, usize, usize),
) -> SymbolDef<'i>
{
    SymbolDef { public: false, is_label: false, name, location: Location(l..r) }
}

#[allow(clippy::too_many_arguments)]
fn __action13<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, l, _): (usize, usize, usize),
    (_, name, _): (usize, &'i str, usize),
    (_, r, _): (usize, usize, usize),
) -> SymbolDef<'i>
{
    SymbolDef { public: true, is_label: false, name, location: Location(l..r) }
}

#[allow(clippy::too_many_arguments)]
fn __action14<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, l, _): (usize, usize, usize),
    (_, name, _): (usize, &'i str, usize),
    (_, r, _): (usize, usize, usize),
) -> SymbolDef<'i>
{
    SymbolDef { public: true, is_label: false, name, location: Location(l..r) }
}

#[allow(clippy::too_many_arguments)]
fn __action15<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
) -> Directive<'i>
{
    Directive::Wrap(Location(l..r))
}

#[allow(clippy::too_many_arguments)]
fn __action16<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
) -> Directive<'i>
{
    Directive::WrapTarget(Location(l..r))
}

#[allow(clippy::too_many_arguments)]
fn __action17<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, v, _): (usize, Value<'i>, usize),
) -> Directive<'i>
{
    Directive::Origin(Location(l..r), v)
}

#[allow(clippy::too_many_arguments)]
fn __action18<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, s, _): (usize, SymbolDef<'i>, usize),
    (_, e, _): (usize, Expression<'i>, usize),
) -> Directive<'i>
{
    Directive::Define(s, e)
}

#[allow(clippy::too_many_arguments)]
fn __action19<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, v, _): (usize, Value<'i>, usize),
    (_, o, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, p, _): (usize, core::option::Option<Token<'i>>, usize),
) -> Directive<'i>
{
    Directive::SideSet {
        location: Location(l..r),
        value: v,
        optional: o.is_some(),
        pindirs: p.is_some()
    }
}

#[allow(clippy::too_many_arguments)]
fn __action20<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, v, _): (usize, Value<'i>, usize),
) -> Directive<'i>
{
    Directive::Word(Location(l..r), v)
}

#[allow(clippy::too_many_arguments)]
fn __action21<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, lang, _): (usize, &'i str, usize),
    (_, var, _): (usize, &'i str, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, val, _): (usize, &'i str, usize),
) -> Directive<'i>
{
    Directive::LangOpt{ location: Location(l..r), lang, var, val }
}

#[allow(clippy::too_many_arguments)]
fn __action22<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, lang, _): (usize, &'i str, usize),
    (_, var, _): (usize, &'i str, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, val, _): (usize, &'i str, usize),
) -> Directive<'i>
{
    Directive::LangOpt{ location: Location(l..r), lang, var, val }
}

#[allow(clippy::too_many_arguments)]
fn __action23<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, lang, _): (usize, &'i str, usize),
    (_, var, _): (usize, &'i str, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, val, _): (usize, &'i str, usize),
) -> Directive<'i>
{
    Directive::LangOpt{ location: Location(l..r), lang, var, val }
}

#[allow(clippy::too_many_arguments)]
fn __action24<
    'i,
>(
    (_, __0, _): (usize, i32, usize),
) -> Value<'i>
{
    Value::Integer(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action25<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, i, _): (usize, &'i str, usize),
    (_, r, _): (usize, usize, usize),
) -> Value<'i>
{
    Value::Identifier(Location(l..r), i)
}

#[allow(clippy::too_many_arguments)]
fn __action26<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, e, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
) -> Value<'i>
{
    Value::Expression(Location(l..r), e.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action27<
    'i,
>(
    (_, __0, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action28<
    'i,
>(
    (_, __0, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action29<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Plus(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action30<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Minus(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action31<
    'i,
>(
    (_, __0, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action32<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Multiply(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action33<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Divide(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action34<
    'i,
>(
    (_, __0, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action35<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::And(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action36<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Or(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action37<
    'i,
>(
    (_, lhs, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, rhs, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Xor(lhs.boxed(), rhs.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action38<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, __0, _): (usize, Expression<'i>, usize),
) -> Expression<'i>
{
    Expression::Opposite(__0.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action39<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, __0, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
) -> Expression<'i>
{
    Expression::Reverse(__0.boxed())
}

#[allow(clippy::too_many_arguments)]
fn __action40<
    'i,
>(
    (_, __0, _): (usize, Value<'i>, usize),
) -> Expression<'i>
{
    Expression::Value(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action41<
    'i,
>(
    (_, ops, _): (usize, (Location, InstructionOperands<'i>), usize),
    (_, delay, _): (usize, core::option::Option<Expression<'i>>, usize),
    (_, side_set, _): (usize, core::option::Option<Value<'i>>, usize),
) -> (Location, Instruction<'i>)
{
    (ops.0, Instruction { ops: ops.1, delay, side_set })
}

#[allow(clippy::too_many_arguments)]
fn __action42<
    'i,
>(
    (_, ops, _): (usize, (Location, InstructionOperands<'i>), usize),
    (_, s, _): (usize, Value<'i>, usize),
    (_, d, _): (usize, Expression<'i>, usize),
) -> (Location, Instruction<'i>)
{
    (ops.0, Instruction { ops: ops.1, delay: Some(d), side_set:Some(s) })
}

#[allow(clippy::too_many_arguments)]
fn __action43<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Nop)
}

#[allow(clippy::too_many_arguments)]
fn __action44<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, c, _): (usize, core::option::Option<JmpCondition>, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, t, _): (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Jmp { condition: c, target: t })
}

#[allow(clippy::too_many_arguments)]
fn __action45<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, v, _): (usize, core::option::Option<Value<'i>>, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, src, _): (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Wait { polarity: v.unwrap_or(Value::Integer(1)), src })
}

#[allow(clippy::too_many_arguments)]
fn __action46<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, src, _): (usize, InSource, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, bit_count, _): (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::In { src, bit_count })
}

#[allow(clippy::too_many_arguments)]
fn __action47<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, target, _): (usize, OutTarget, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, bit_count, _): (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Out { target, bit_count })
}

#[allow(clippy::too_many_arguments)]
fn __action48<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, c, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, b, _): (usize, core::option::Option<bool>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Push { if_full: c.is_some(), blocking: b.unwrap_or(true) })
}

#[allow(clippy::too_many_arguments)]
fn __action49<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, c, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, b, _): (usize, core::option::Option<bool>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Pull { if_empty: c.is_some(), blocking: b.unwrap_or(true) })
}

#[allow(clippy::too_many_arguments)]
fn __action50<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, t, _): (usize, MovTarget, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, op, _): (usize, core::option::Option<MovOp>, usize),
    (_, s, _): (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Mov { src: s, op, trg: t })
}

#[allow(clippy::too_many_arguments)]
fn __action51<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, m, _): (usize, core::option::Option<IrqModifier>, usize),
    (_, v, _): (usize, Value<'i>, usize),
    (_, re, _): (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Irq {
        modifier: m.unwrap_or(IrqModifier::Set),
        value: v,
        relative: re.is_some()
    })
}

#[allow(clippy::too_many_arguments)]
fn __action52<
    'i,
>(
    (_, l, _): (usize, usize, usize),
    (_, _, _): (usize, Token<'i>, usize),
    (_, r, _): (usize, usize, usize),
    (_, t, _): (usize, SetTarget, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, v, _): (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    (Location(l..r), InstructionOperands::Set { target: t, value: v })
}

#[allow(clippy::too_many_arguments)]
fn __action53<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, __0, _): (usize, Value<'i>, usize),
) -> Value<'i>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action54<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, __0, _): (usize, Expression<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
) -> Expression<'i>
{
    __0
}

#[allow(clippy::too_many_arguments)]
fn __action55<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, v, _): (usize, Value<'i>, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, r, _): (usize, core::option::Option<Token<'i>>, usize),
) -> WaitSource<'i>
{
    WaitSource::Irq(v, r.is_some())
}

#[allow(clippy::too_many_arguments)]
fn __action56<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, __0, _): (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    WaitSource::Gpio(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action57<
    'i,
>(
    (_, _, _): (usize, Token<'i>, usize),
    (_, _, _): (usize, core::option::Option<Token<'i>>, usize),
    (_, __0, _): (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    WaitSource::Pin(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action58<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::Pins
}

#[allow(clippy::too_many_arguments)]
fn __action59<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::X
}

#[allow(clippy::too_many_arguments)]
fn __action60<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::Y
}

#[allow(clippy::too_many_arguments)]
fn __action61<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::Null
}

#[allow(clippy::too_many_arguments)]
fn __action62<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::Isr
}

#[allow(clippy::too_many_arguments)]
fn __action63<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::Osr
}

#[allow(clippy::too_many_arguments)]
fn __action64<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> InSource
{
    InSource::Status
}

#[allow(clippy::too_many_arguments)]
fn __action65<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::Pins
}

#[allow(clippy::too_many_arguments)]
fn __action66<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::X
}

#[allow(clippy::too_many_arguments)]
fn __action67<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::Y
}

#[allow(clippy::too_many_arguments)]
fn __action68<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::Null
}

#[allow(clippy::too_many_arguments)]
fn __action69<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::PinDirs
}

#[allow(clippy::too_many_arguments)]
fn __action70<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::Isr
}

#[allow(clippy::too_many_arguments)]
fn __action71<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::Pc
}

#[allow(clippy::too_many_arguments)]
fn __action72<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> OutTarget
{
    OutTarget::Exec
}

#[allow(clippy::too_many_arguments)]
fn __action73<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
    (_, __1, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::NotX
}

#[allow(clippy::too_many_arguments)]
fn __action74<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
    (_, __1, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::XPostDec
}

#[allow(clippy::too_many_arguments)]
fn __action75<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
    (_, __1, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::NotY
}

#[allow(clippy::too_many_arguments)]
fn __action76<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
    (_, __1, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::YPostDec
}

#[allow(clippy::too_many_arguments)]
fn __action77<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
    (_, __1, _): (usize, Token<'i>, usize),
    (_, __2, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::XNotEqualY
}

#[allow(clippy::too_many_arguments)]
fn __action78<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::Pin
}

#[allow(clippy::too_many_arguments)]
fn __action79<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
    (_, __1, _): (usize, Token<'i>, usize),
) -> JmpCondition
{
    JmpCondition::OSRNotEmpty
}

#[allow(clippy::too_many_arguments)]
fn __action80<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovOp
{
    MovOp::Not
}

#[allow(clippy::too_many_arguments)]
fn __action81<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovOp
{
    MovOp::Reverse
}

#[allow(clippy::too_many_arguments)]
fn __action82<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::Pins
}

#[allow(clippy::too_many_arguments)]
fn __action83<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::X
}

#[allow(clippy::too_many_arguments)]
fn __action84<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::Y
}

#[allow(clippy::too_many_arguments)]
fn __action85<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::Exec
}

#[allow(clippy::too_many_arguments)]
fn __action86<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::Pc
}

#[allow(clippy::too_many_arguments)]
fn __action87<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::Isr
}

#[allow(clippy::too_many_arguments)]
fn __action88<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovTarget
{
    MovTarget::Osr
}

#[allow(clippy::too_many_arguments)]
fn __action89<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::Pins
}

#[allow(clippy::too_many_arguments)]
fn __action90<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::X
}

#[allow(clippy::too_many_arguments)]
fn __action91<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::Y
}

#[allow(clippy::too_many_arguments)]
fn __action92<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::Null
}

#[allow(clippy::too_many_arguments)]
fn __action93<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::Status
}

#[allow(clippy::too_many_arguments)]
fn __action94<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::Isr
}

#[allow(clippy::too_many_arguments)]
fn __action95<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> MovSource
{
    MovSource::Osr
}

#[allow(clippy::too_many_arguments)]
fn __action96<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> bool
{
    true
}

#[allow(clippy::too_many_arguments)]
fn __action97<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> bool
{
    false
}

#[allow(clippy::too_many_arguments)]
fn __action98<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> SetTarget
{
    SetTarget::Pins
}

#[allow(clippy::too_many_arguments)]
fn __action99<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> SetTarget
{
    SetTarget::PinDirs
}

#[allow(clippy::too_many_arguments)]
fn __action100<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> SetTarget
{
    SetTarget::X
}

#[allow(clippy::too_many_arguments)]
fn __action101<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> SetTarget
{
    SetTarget::Y
}

#[allow(clippy::too_many_arguments)]
fn __action102<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> IrqModifier
{
    IrqModifier::Clear
}

#[allow(clippy::too_many_arguments)]
fn __action103<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> IrqModifier
{
    IrqModifier::SetWait
}

#[allow(clippy::too_many_arguments)]
fn __action104<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> IrqModifier
{
    IrqModifier::Set
}

#[allow(clippy::too_many_arguments)]
fn __action105<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> IrqModifier
{
    IrqModifier::Set
}

#[allow(clippy::too_many_arguments)]
fn __action106<
    'i,
>(
    (_, s, _): (usize, SymbolDef<'i>, usize),
    (_, _, _): (usize, Token<'i>, usize),
) -> SymbolDef<'i>
{
    SymbolDef { is_label: true, ..s }
}

#[allow(clippy::too_many_arguments)]
fn __action107<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> core::option::Option<Token<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action108<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Token<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action109<
    'i,
>(
    (_, __0, _): (usize, IrqModifier, usize),
) -> core::option::Option<IrqModifier>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action110<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<IrqModifier>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action111<
    'i,
>(
    (_, __0, _): (usize, MovOp, usize),
) -> core::option::Option<MovOp>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action112<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<MovOp>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action113<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> core::option::Option<Token<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action114<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Token<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action115<
    'i,
>(
    (_, __0, _): (usize, bool, usize),
) -> core::option::Option<bool>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action116<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<bool>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action117<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> core::option::Option<Token<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action118<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Token<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action119<
    'i,
>(
    (_, __0, _): (usize, Value<'i>, usize),
) -> core::option::Option<Value<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action120<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Value<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action121<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> core::option::Option<Token<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action122<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Token<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action123<
    'i,
>(
    (_, __0, _): (usize, JmpCondition, usize),
) -> core::option::Option<JmpCondition>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action124<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<JmpCondition>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action125<
    'i,
>(
    (_, __0, _): (usize, Value<'i>, usize),
) -> core::option::Option<Value<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action126<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Value<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action127<
    'i,
>(
    (_, __0, _): (usize, Expression<'i>, usize),
) -> core::option::Option<Expression<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action128<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Expression<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action129<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> core::option::Option<Token<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action130<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Token<'i>>
{
    None
}

#[allow(clippy::too_many_arguments)]
fn __action131<
    'i,
>(
    (_, __0, _): (usize, Token<'i>, usize),
) -> core::option::Option<Token<'i>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments)]
fn __action132<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> core::option::Option<Token<'i>>
{
    None
}

fn __action133<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> usize
{
    *__lookbehind
}

fn __action134<
    'i,
>(
    __lookbehind: &usize,
    __lookahead: &usize,
) -> usize
{
    *__lookahead
}

#[allow(clippy::too_many_arguments)]
fn __action135<
    'i,
>(
    (_, __0, _): (usize, Option<Line<'i>>, usize),
) -> alloc::vec::Vec<Option<Line<'i>>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments)]
fn __action136<
    'i,
>(
    (_, v, _): (usize, alloc::vec::Vec<Option<Line<'i>>>, usize),
    (_, e, _): (usize, Option<Line<'i>>, usize),
) -> alloc::vec::Vec<Option<Line<'i>>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments)]
fn __action137<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action43(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action138<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, core::option::Option<JmpCondition>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action44(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action139<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, core::option::Option<Value<'i>>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action45(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action140<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, InSource, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action46(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action141<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, OutTarget, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action47(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action142<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, core::option::Option<bool>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action48(
        __temp0,
        __0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action143<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, core::option::Option<bool>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action49(
        __temp0,
        __0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action144<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, MovTarget, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, core::option::Option<MovOp>, usize),
    __5: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action50(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action145<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, core::option::Option<IrqModifier>, usize),
    __3: (usize, Value<'i>, usize),
    __4: (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action51(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action146<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, SetTarget, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action52(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action147<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action15(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action148<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action16(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action149<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, Value<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action17(
        __temp0,
        __0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action150<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
    __4: (usize, core::option::Option<Token<'i>>, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action19(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action151<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, Value<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action20(
        __temp0,
        __0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action152<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, &'i str, usize),
    __3: (usize, &'i str, usize),
    __4: (usize, Token<'i>, usize),
    __5: (usize, &'i str, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action21(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action153<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, &'i str, usize),
    __3: (usize, &'i str, usize),
    __4: (usize, Token<'i>, usize),
    __5: (usize, &'i str, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action22(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action154<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, usize, usize),
    __2: (usize, &'i str, usize),
    __3: (usize, &'i str, usize),
    __4: (usize, Token<'i>, usize),
    __5: (usize, &'i str, usize),
) -> Directive<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action23(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action155<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
    __2: (usize, usize, usize),
) -> Line<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action6(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action156<
    'i,
>(
    __0: (usize, &'i str, usize),
    __1: (usize, usize, usize),
) -> SymbolDef<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action12(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action157<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
    __2: (usize, usize, usize),
) -> SymbolDef<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action13(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action158<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
    __2: (usize, usize, usize),
) -> SymbolDef<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action14(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action159<
    'i,
>(
    __0: (usize, &'i str, usize),
    __1: (usize, usize, usize),
) -> Value<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action25(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action160<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Expression<'i>, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, usize, usize),
) -> Value<'i>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action26(
        __temp0,
        __0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action161<
    'i,
>(
    __0: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action137(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action162<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<JmpCondition>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action138(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action163<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Value<'i>>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action139(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action164<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, InSource, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action140(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action165<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, OutTarget, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action141(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action166<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
    __2: (usize, core::option::Option<bool>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action142(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action167<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
    __2: (usize, core::option::Option<bool>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action143(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action168<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, core::option::Option<MovOp>, usize),
    __4: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action144(
        __0,
        __temp0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action169<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<IrqModifier>, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action145(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action170<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, SetTarget, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action146(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action171<
    'i,
>(
    __0: (usize, Token<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action147(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action172<
    'i,
>(
    __0: (usize, Token<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action148(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action173<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action149(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action174<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action150(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action175<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action151(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action176<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
    __2: (usize, &'i str, usize),
    __3: (usize, Token<'i>, usize),
    __4: (usize, &'i str, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action152(
        __0,
        __temp0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action177<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
    __2: (usize, &'i str, usize),
    __3: (usize, Token<'i>, usize),
    __4: (usize, &'i str, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action153(
        __0,
        __temp0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action178<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
    __2: (usize, &'i str, usize),
    __3: (usize, Token<'i>, usize),
    __4: (usize, &'i str, usize),
) -> Directive<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action154(
        __0,
        __temp0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action179<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
) -> Line<'i>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action155(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action180<
    'i,
>(
    __0: (usize, &'i str, usize),
) -> SymbolDef<'i>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action156(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action181<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
) -> SymbolDef<'i>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action157(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action182<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, &'i str, usize),
) -> SymbolDef<'i>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action158(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action183<
    'i,
>(
    __0: (usize, &'i str, usize),
) -> Value<'i>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action159(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action184<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Expression<'i>, usize),
    __2: (usize, Token<'i>, usize),
) -> Value<'i>
{
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action160(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action185<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
    __2: (usize, bool, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action115(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action166(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action186<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action116(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action166(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action187<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
    __2: (usize, bool, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action115(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action167(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action188<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action116(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action167(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action189<
    'i,
>(
    __0: (usize, (Location, InstructionOperands<'i>), usize),
    __1: (usize, Expression<'i>, usize),
    __2: (usize, core::option::Option<Value<'i>>, usize),
) -> (Location, Instruction<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action127(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action41(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action190<
    'i,
>(
    __0: (usize, (Location, InstructionOperands<'i>), usize),
    __1: (usize, core::option::Option<Value<'i>>, usize),
) -> (Location, Instruction<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action128(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action41(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action191<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, IrqModifier, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action109(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action169(
        __0,
        __temp0,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action192<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action110(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action169(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action193<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, JmpCondition, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action123(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action162(
        __0,
        __temp0,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action194<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
    __2: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action124(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action162(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action195<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, MovOp, usize),
    __4: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action111(
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action168(
        __0,
        __1,
        __2,
        __temp0,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action196<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.2;
    let __end0 = __3.0;
    let __temp0 = __action112(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action168(
        __0,
        __1,
        __2,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action197<
    'i,
>(
    __0: (usize, (Location, InstructionOperands<'i>), usize),
    __1: (usize, Expression<'i>, usize),
    __2: (usize, Value<'i>, usize),
) -> (Location, Instruction<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action125(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action189(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action198<
    'i,
>(
    __0: (usize, (Location, InstructionOperands<'i>), usize),
    __1: (usize, Expression<'i>, usize),
) -> (Location, Instruction<'i>)
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action126(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action189(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action199<
    'i,
>(
    __0: (usize, (Location, InstructionOperands<'i>), usize),
    __1: (usize, Value<'i>, usize),
) -> (Location, Instruction<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action125(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action190(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action200<
    'i,
>(
    __0: (usize, (Location, InstructionOperands<'i>), usize),
) -> (Location, Instruction<'i>)
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action126(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action190(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action201<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
    __3: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action119(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action163(
        __0,
        __temp0,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action202<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, core::option::Option<Token<'i>>, usize),
    __2: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action163(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action203<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, JmpCondition, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action193(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action204<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, JmpCondition, usize),
    __2: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action193(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action205<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action121(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action194(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action206<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Expression<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action194(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action207<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action201(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action208<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action201(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action209<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action121(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action202(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action210<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, WaitSource<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action202(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action211<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, InSource, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action164(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action212<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, InSource, usize),
    __2: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action164(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action213<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, OutTarget, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action165(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action214<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, OutTarget, usize),
    __2: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action165(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action215<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, MovOp, usize),
    __4: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action195(
        __0,
        __1,
        __temp0,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action216<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, MovOp, usize),
    __3: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action195(
        __0,
        __1,
        __temp0,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action217<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action196(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action218<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, MovTarget, usize),
    __2: (usize, MovSource, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action196(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action219<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, SetTarget, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action170(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action220<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, SetTarget, usize),
    __2: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action170(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action221<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, Token<'i>, usize),
    __4: (usize, core::option::Option<Token<'i>>, usize),
) -> WaitSource<'i>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __start1 = __3.0;
    let __end1 = __3.2;
    let __temp0 = __action121(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action121(
        __3,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action55(
        __0,
        __temp0,
        __2,
        __temp1,
        __4,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action222<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
) -> WaitSource<'i>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action121(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action122(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action55(
        __0,
        __temp0,
        __2,
        __temp1,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action223<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
) -> WaitSource<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.0;
    let __end1 = __2.2;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action121(
        __2,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action55(
        __0,
        __temp0,
        __1,
        __temp1,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action224<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
) -> WaitSource<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __1.2;
    let __end1 = __2.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action122(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action55(
        __0,
        __temp0,
        __1,
        __temp1,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action225<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action121(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action56(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action226<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action56(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action227<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action121(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action57(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action228<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action122(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action57(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action229<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, bool, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action113(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action187(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action230<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, bool, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action114(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action187(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action231<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action113(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action188(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action232<
    'i,
>(
    __0: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action114(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action188(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action233<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, bool, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action117(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action185(
        __0,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action234<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, bool, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action118(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action185(
        __0,
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action235<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action117(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action186(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action236<
    'i,
>(
    __0: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action118(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action186(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action237<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, core::option::Option<Token<'i>>, usize),
) -> Directive<'i>
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action131(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action174(
        __0,
        __1,
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action238<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, core::option::Option<Token<'i>>, usize),
) -> Directive<'i>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action174(
        __0,
        __1,
        __temp0,
        __2,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action239<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, Token<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action129(
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action237(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action240<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action130(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action237(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action241<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action129(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action238(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action242<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> Directive<'i>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action130(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action238(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action243<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, IrqModifier, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action107(
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action191(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action244<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, IrqModifier, usize),
    __2: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action108(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action191(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action245<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action107(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action192(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action246<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> (Location, InstructionOperands<'i>)
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action108(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action192(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action247<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, Token<'i>, usize),
    __4: (usize, Token<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __4.0;
    let __end0 = __4.2;
    let __temp0 = __action107(
        __4,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action221(
        __0,
        __1,
        __2,
        __3,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action248<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, Token<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __3.2;
    let __end0 = __3.2;
    let __temp0 = __action108(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action221(
        __0,
        __1,
        __2,
        __3,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action249<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
    __3: (usize, Token<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action107(
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action222(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action250<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Token<'i>, usize),
    __2: (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action108(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action222(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action251<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
    __3: (usize, Token<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action107(
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action223(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action252<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action108(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action223(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action253<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
    __2: (usize, Token<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __2.0;
    let __end0 = __2.2;
    let __temp0 = __action107(
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action224(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments)]
fn __action254<
    'i,
>(
    __0: (usize, Token<'i>, usize),
    __1: (usize, Value<'i>, usize),
) -> WaitSource<'i>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action108(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action224(
        __0,
        __1,
        __temp0,
    )
}
#[allow(clippy::type_complexity)]

pub trait __ToTriple<'i, >
{
    fn to_triple(value: Self) -> Result<(usize,Token<'i>,usize), __lalrpop_util::ParseError<usize, Token<'i>, lexer::Error>>;
}

impl<'i, > __ToTriple<'i, > for (usize, Token<'i>, usize)
{
    fn to_triple(value: Self) -> Result<(usize,Token<'i>,usize), __lalrpop_util::ParseError<usize, Token<'i>, lexer::Error>> {
        Ok(value)
    }
}
impl<'i, > __ToTriple<'i, > for Result<(usize, Token<'i>, usize), lexer::Error>
{
    fn to_triple(value: Self) -> Result<(usize,Token<'i>,usize), __lalrpop_util::ParseError<usize, Token<'i>, lexer::Error>> {
        match value {
            Ok(v) => Ok(v),
            Err(error) => Err(__lalrpop_util::ParseError::User { error }),
        }
    }
}
